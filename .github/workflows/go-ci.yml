name: Go CI

on:
  push:
    branches: [ main ]

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest # Указан Windows runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.6

      - name: Perform Go Mod Tidy for all modules
        # Запускаем go mod tidy для каждого модуля, чтобы разрешить зависимости
        # forward slashes используются для paths даже на Windows
        run: |
          go mod tidy -C ./goldentest
          go mod tidy -C ./translator
          go mod tidy -C ./machine
          go mod tidy -C ./isa

      - name: Build machine module
        # NEW: Builds the machine.exe binary
        working-directory: ./machine
        run: go build -o machine

      - name: Set execute permissions for machine
        # NEW: Grants execute permissions on Linux
        working-directory: ./machine
        run: chmod +x machine

      - name: Build translator module
        # Builds the translator.exe binary
        working-directory: ./translator
        run: go build -o translator

      - name: Set execute permissions for translator
        # Grants execute permissions on Linux
        working-directory: ./translator
        run: chmod +x translator

      - name: Set up Go workspace (go.work)
        # Запускаем go work sync из корневой директории, где находится go.work
        # working-directory не нужен, если команда выполняется из корня репозитория
        run: go work sync

      - name: Go fmt/imports check
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          if ! goimports -l .; then
            echo "::error file=.::Go files not formatted with goimports or imports are unorganized. Please run 'goimports -w .' on your local machine."
            exit 1
          fi

      - name: Run tests in goldentest module
        working-directory: ./goldentest # Указываем путь к модулю goldentest
        run: go test -v ./